// idee per la gestione dei messaggi
// avremo una struttura per messaggi (contenente tutte le info e il messaggio
// ogni volta che c'è bisogno di memorizzare un messaggio perché il dest è offline, si memorizza prima le sue info sul file delle infomessaggi e poi il testo sul file testomessaggi.
// I file verranno analizzati parallelamentee e saranno ordinati in maniera cronologica (più vecchi ad inizio file, più nuovi verso fine file)
// Notare bene che tutti gli elementi dei due file hanno stato uguale a 1 (quindi sono solo memorizzati).
// all'avvio verrà inizializzata la lista con tutti gli elementi dei 2 file. (la testa sarà il messaggio più vecchio).
// al termine si aprono entrambi i file in scrittura e si scrivono solo quelli che hanno stato ancora a 1. Quelli con stato uguale a 2 saranno già stati inviati e memorizzati dai destinatari.
// La lista a questo punto non è necessario ordinarla per come sono stati inseriti nel file log. 



/* 
Ho un file txt dove salvo ogni volta che termino il server tutte le sessioni ancora aperte.
Ogni volta che avvio il server inizializzo la lista con le sole sessioni ancora aperte.
Per soddisfare il requisito sul salvataggio delle disconessioni offline il file txt conterrà sia 
le sessioni aperte che quelle chiuse. 

Si implementano 2 file per le sessioni, una conterrà le sessioni chiuse(con logout) e l'altra 
sessioni ancora aperte()

ho un altro file con solo le info degli utenti registrati
*/


ho quattro casi diversi per le disconnessioni
1) il device effettua un regolare logout
2) il device si disconnette in maniera irregolare
3) il device invia un timestamp di logut relativa ad una sessione precedente
4) il device resta connesso ma il server si disconnette

DA SISTEMARE:
1) sistemare gli ack che il server deve spedire ai dispositvi dopo aver gestito un messaggio

2) Se è la prima volta che l’utente invia un messaggio all’utente destinatario,
l’applicazione dell’utente invierà il messaggio al server, il quale stabilirà se l’utente destinatario è online
tramite un registro costituito da entry del tipo mostrato in Fig. 2, dove user_dest è uno username, port è la
porta alla quale l’utente è raggiungibile, timestamp_login e timestamp_logout sono il timestamp di login e
logout, rispettivamente.
user_dest port timestamp_login timestamp_logout
Figura 2: Struttura di entry del registro del server.
Se nel registro è presente una entry con lo username del destinatario (user_dest), priva di timestamp di
logout, l’utente destinatario è online. Il server recapiterà quindi il messaggio all’utente destinatario. Se l’invio
va a buon fine, il server invia all’utente che ha iniziato la conversazione un messaggio contenente un ack di
avvenuta ricezione del messaggio da parte dell’utente destinatario, comprensivo della porta (port) sulla quale
l’utente destinatario è connesso. Se il server non riesce a inviare il messaggio, riprova per 3 volte, dopodiché
memorizza il messaggio, aggiorna la entry relativa a user_dest ponendo il campo timestamp_logout al
timestamp corrente, e invia all’utente che aveva inviato il messaggio un ack di avvenuta memorizzazione del
messaggio, ma mancato recapito. Se l’utente continua a inviare messaggi a user_dest, questi saranno
memorizzati sul server finché user_dest non effettuerà di nuovo il login. A quel punto, su richiesta di
user_dest, il server recapiterà a user_dest i messaggi bufferizzati, inviando una conferma di avvenuta
ricezione ai corrispondenti utenti mittenti se l’invio va a buon fine1.


3) fare in modo che l'id del gruppo venga inizializzato con un valore letto da file non appena il device viene avviato

4) device:  se un utente anche vecchio risulta offline invio il messaggio al server. non mi occupo io di reinviarglielo
quando torna online lo fa sempre il server.


// si stabilisce una specie di cash per i messaggi con ogni utente
// ogni file avrà il nome user-chat.txt strutturato nella seguente maniera:
// esempio
// 2022-10-25 21:07:14 - sisa213:
// (*)Ciao il mio primo messaggio!
//
// 2022-10-25 23:01:32 - sisa213:
// (**)Considerami per favore :/
//
// 2022-10-25 23:01:32 sisa2130 piko99:
// -Considerami per favore :/


NOTA BENE: usa free solo se hai usato malloc!